UWAGA! Przed użyciem funkcji związanymi z bazą danych należy w kodzie programu 
(w funkji Import_Map w pliku źródłowym) zmienić docelowy adres lokaalizacji notatnika będącego baża danych

Do Aktualizacji
Priorytet:
- Stworzenie wyjątków lub lepszej metody zgłaszania "braku Punktu"
- Ulepszenie algorytmu szukania drogi
- Możliwość wczytywania bazy danych bez zmiany ręcznej ścieżki pliku

Inne zadania:
- Utworzenie Funkcji sprawdzających poprawność bazy danych
1)Czy plik tekstowy bazy danych w każdej linijce posiada id,
 obie współrzędne i conajmniej jednego sąsiada
2)Czy Id się powtarza
- Utworzenie wyjątków dla braku znalezienia punktu poprzez jego id

Odległe zadania:
-Co zrobić gdy dwa punkty przyjmą tą samą nazwe
-Jak zaimplementować mapy na większą skale
-Wiele nazw dla jednego punktu

Plik nagłówkowy:


1)Klasa punkt:
Składowe klasy:
-id(unikalny numer identyfikujący punkt)
-x (współrzędne punktu)
-y (współrzędne punktu)
-nazwa   ( Po niej użytkownik szuka punktu)
-lista id punktów sąsiadujących

Konstruktory:
-domyślny kopiujący
-Podanie każdej składowej z osobna
-Poprzez jeden ciąg znaków (wykorzystywane do odczytywania bazy danych)

Metody:
- "Get"
-getid()
-getx()
-gety()
-getname()
-getlist()
otrzymanie dostępu do składowych klasy


2)Klasa Listy punktów
Składowa Klasy:
-Wektor z obiektami klasy Punkt

Konstruktor:
Tworzy wektor z jedenym podanym punktem w celu możliwości uworzenia obiektu.
Punkt ten powiniem być usuwany po utworzeniu bazy danych poprzez importowanie poprawnej bazy danych

Metody:
Import_Map - zamienia Punkty zapisane w pliku tekstowym w obiekty wykorzystywane przez program
find() - zainmplemetowana metoda do odszukiwania punktów poprzez ich unikalne id.
Funkcja zwraca pozycje punktu w wektorze będącym wartością składową klasy.
W przypadku braku znalezienia funkcji zwraca 0

3)Klasa Drogi
Składowa Klasy:
-Wektor z obiektami klasy Punkt

Konstruktor:
Tworzy wektor punktów poprzez kopiowanie podanego wektora punktów

Metody:
distance_calculate()- oblicza długość całej drogi
find() - zainmplemetowana metoda do odszukiwania punktów poprzez ich unikalne id.
Funkcja zwraca pozycje punktu w wektorze będącym wartością składową klasy.
W przypadku braku znalezienia funkcji zwraca 0
 
 4) Luźne metody
 - Obliczanie długości między dwoma punktami
 - Znalezienie wektora o składowych typu Punkt Na podstawie początkowego punktu, końcowego punktu i bazy danych w których się znajdują

Plik źródłowy:

!!!!! WAŻNE !!!!!
to tutaj uaktalnia się ścieżkę do bazy danych


Testy Jednotkowe:
!!!!! WAŻNE !!!!!
testy odbywają się na testowej bazie danych BazaTest.txt

1) Normalny konstruktor punktu po podaniu potrzebnych danych
2) Kostrukto Tworzący cały obiekt Punkt za pomącą jedynie zmiennejstd::string
3) Test funkcji Import_Map - proszę zwrócić uwage że wykonanie 
tego testu zależy w większości od poprawności samej bazy danych
Bez funkcji automatycznie wykonujących tą czynność za nas korzystanie z tego  testu może być żmudne
4) Funkcja szukająca punktów poprzez id w środku obiektu klasy PointList
5) Obliczanie odległości pomiędzy dwoma punktami - luźna funkcja
6) Tworzenie obiektu drogi i obliczanie jego odległości
7) Funkcja znalezienia drogi i obliczenia jej długości
